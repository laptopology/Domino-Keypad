# Configuration
substitutions:
  name: "domino-keypad"
  friendly_name:  "Domino Keypad"
esphome:
  name: ${name}
  friendly_name: "${friendly_name}"
  name_add_mac_suffix: false
  project:
    name: "HomeConnected.Domino_Keypad"
    version: "2024.25.4"
  includes:
    - ./keypads/keypadtext2.h
  libraries:
    - "Keypad"
dashboard_import:
  import_full_config: true
  package_import_url: github://laptopology/Domino-Keypad/dominokeypad.yaml@main
esp32:
  board: esp32dev
  framework:
    type: arduino
logger:
 level: INFO
api:
  services:
    - service: keypad_play_rtttl
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return song_str;'  
ota:
wifi:
  ap:
    ssid: "${name} Config"
    password: "12345678"
captive_portal:

# Components
text_sensor:
  - platform: custom
    lambda: |-
      auto my_sensor = new KeypadTextSensor();
      App.register_component(my_sensor);
      return {my_sensor};
    # Keypad code entered before pressing 'enter'
    text_sensors:
      name: "Keypad Code"
light:
- platform: neopixelbus
  variant: WS2812
  pin: GPIO32
  num_leds: 1
  id: keypad_led
  name: "Status LED"
  effects:
      - strobe:
      - pulse:
switch:
- platform: template
  name: "Buzzer enabled"
  id: buzzer_enabled
  icon: mdi:volume-high
  optimistic: true
  entity_category: config
  restore_mode: ALWAYS_ON
- platform: template
  name: "LED enabled"
  id: led_enabled
  icon: mdi:alarm-light-outline
  optimistic: true
  entity_category: config
  restore_mode: ALWAYS_ON
output:
  - platform: ledc
    pin: GPIO26
    id: buzzer
rtttl:
  output: buzzer

select:
  - platform: template
    name: "Select song"
    id: select_song
    options: 
      - 2 short beeps
      - 1 long beep
      - Siren
      - Scale Up
      - Mission Impossible
      - The Simpsons
      - James Bond
      - Indiana Jones
      - Entertainer
      - The Muppets
      - X-files
      - Looney Toons
      - 20th Century Fox
      - MASH
      - Star Wars
      - Good Bad Ugly
      - Top Gun
      - A-Team
      - The Flinstones
      - Jeopardy
      - Inspector Gadget
      - The Smurfs
      - Mahna Mahna
      - Leisure Suit
      - SMBdeath
      - Monty Python
      - Yaketysax
      - YMCA
      - Barbie Girl
      - Take On Me
      - Mario
    initial_option: "2 short beeps"
    optimistic: true
    #set_action:
    #  then:
    #    lambda: id(select_song).publish_state(x);
button:
  - platform: restart
    name: "Restart"
  - platform: template
    name: "Stop playing"
    on_press: 
      then:
        - rtttl.stop: 
  - platform: template
    name: "Play Song"
    on_press: 
      #- if:
      #    condition:
      #      - switch.is_on: led_enabled
      #    then:
      #      - light.turn_on:
      #          id: keypad_led
      #          brightness: 100%
      #          effect: pulse
      #      - delay: 10s
      #      - light.turn_off: keypad_led
      - if:
          condition:
            - switch.is_on: buzzer_enabled
          then:
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "2 short beeps");
                then:
                  - rtttl.play: "two_short:d=4,o=5,b=100:16e6,16e6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "1 long beep");
                then:
                  - rtttl.play: "long:d=1,o=5,b=100:e6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Siren");
                then:
                  - rtttl.play: "siren:d=8,o=5,b=100:d,e,d,e,d,e,d,e"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Scale Up");
                then:
                  - rtttl.play: "scale_up:d=32,o=5,b=100:c,c#,d#,e,f#,g#,a#,b"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Mario");
                then:
                  - rtttl.play: "mario:d=4,o=5,b=100:16e6,16e6,32p,8e6,16c6,8e6,8g6,8p,8g,8p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,16p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16c7,16p,16c7,16c7,p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16d#6,8p,16d6,8p,16c6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Mission Impossible");
                then:
                  - rtttl.play: "Mission_imp:d=16,o=6,b=95:32d,32d#,32d,32d#,32d,32d#,32d,32d#,32d,32d,32d#,32e,32f,32f#,32g,g,8p,g,8p,a#,p,c7,p,g,8p,g,8p,f,p,f#,p,g,8p,g,8p,a#,p,c7,p,g,8p,g,8p,f,p,f#,p,a#,g,2d,32p,a#,g,2c#,32p,a#,g,2c,a#5,8c,2p,32p,a#5,g5,2f#,32p,a#5,g5,2f,32p,a#5,g5,2e,d#,8d"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "The Simpsons");
                then:
                  - rtttl.play: "The Simpsons:d=4,o=5,b=160:c.6,e6,f#6,8a6,g.6,e6,c6,8a,8f#,8f#,8f#,2g,8p,8p,8f#,8f#,8f#,8g,a#.,8c6,8c6,8c6,c6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "James Bond");
                then:
                  - rtttl.play: "Bond:d=4,o=5,b=80:32p,16c#6,32d#6,32d#6,16d#6,8d#6,16c#6,16c#6,16c#6,16c#6,32e6,32e6,16e6,8e6,16d#6,16d#6,16d#6,16c#6,32d#6,32d#6,16d#6,8d#6,16c#6,16c#6,16c#6,16c#6,32e6,32e6,16e6,8e6,16d#6,16d6,16c#6,16c#7,c.7,16g#6,16f#6,g#.6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Indiana Jones");
                then:
                  - rtttl.play: "Indiana:d=4,o=5,b=250:e,8p,8f,8g,8p,1c6,8p.,d,8p,8e,1f,p.,g,8p,8a,8b,8p,1f6,p,a,8p,8b,2c6,2d6,2e6,e,8p,8f,8g,8p,1c6,p,d6,8p,8e6,1f.6,g,8p,8g,e.6,8p,d6,8p,8g,e.6,8p,d6,8p,8g,f.6,8p,e6,8p,8d6,2c6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Entertainer");
                then:
                  - rtttl.play: "Entertainer:d=4,o=5,b=140:8d,8d#,8e,c6,8e,c6,8e,2c.6,8c6,8d6,8d#6,8e6,8c6,8d6,e6,8b,d6,2c6,p,8d,8d#,8e,c6,8e,c6,8e,2c.6,8p,8a,8g,8f#,8a,8c6,e6,8d6,8c6,8a,2d6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "The Muppets");
                then:
                  - rtttl.play: "Muppets:d=4,o=5,b=250:c6,c6,a,b,8a,b,g,p,c6,c6,a,8b,8a,8p,g.,p,e,e,g,f,8e,f,8c6,8c,8d,e,8e,8e,8p,8e,g,2p,c6,c6,a,b,8a,b,g,p,c6,c6,a,8b,a,g.,p,e,e,g,f,8e,f,8c6,8c,8d,e,8e,d,8d,c"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "X-files");
                then:
                  - rtttl.play: "Xfiles:d=4,o=5,b=125:e,b,a,b,d6,2b.,1p,e,b,a,b,e6,2b.,1p,g6,f#6,e6,d6,e6,2b.,1p,g6,f#6,e6,d6,f#6,2b.,1p,e,b,a,b,d6,2b.,1p,e,b,a,b,e6,2b.,1p,e6,2b."
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Looney Toons");
                then:
                  - rtttl.play: "Looney:d=4,o=5,b=140:32p,c6,8f6,8e6,8d6,8c6,a.,8c6,8f6,8e6,8d6,8d#6,e.6,8e6,8e6,8c6,8d6,8c6,8e6,8c6,8d6,8a,8c6,8g,8a#,8a,8f"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "20th Century Fox");
                then:
                  - rtttl.play: "20thCenFox:d=16,o=5,b=140:b,8p,b,b,2b,p,c6,32p,b,32p,c6,32p,b,32p,c6,32p,b,8p,b,b,b,32p,b,32p,b,32p,b,32p,b,32p,b,32p,b,32p,g#,32p,a,32p,b,8p,b,b,2b,4p,8e,8g#,8b,1c#6,8f#,8a,8c#6,1e6,8a,8c#6,8e6,1e6,8b,8g#,8a,2b"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "MASH");
                then:
                  - rtttl.play: "MASH:d=8,o=5,b=140:4a,4g,f#,g,p,f#,p,g,p,f#,p,2e.,p,f#,e,4f#,e,f#,p,e,p,4d.,p,f#,4e,d,e,p,d,p,e,p,d,p,2c#.,p,d,c#,4d,c#,d,p,e,p,4f#,p,a,p,4b,a,b,p,a,p,b,p,2a.,4p,a,b,a,4b,a,b,p,2a.,a,4f#,a,b,p,d6,p,4e.6,d6,b,p,a,p,2b"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Star Wars");
                then:
                  - rtttl.play: "StarWars:d=4,o=5,b=45:32p,32f#,32f#,32f#,8b.,8f#.6,32e6,32d#6,32c#6,8b.6,16f#.6,32e6,32d#6,32c#6,8b.6,16f#.6,32e6,32d#6,32e6,8c#.6,32f#,32f#,32f#,8b.,8f#.6,32e6,32d#6,32c#6,8b.6,16f#.6,32e6,32d#6,32c#6,8b.6,16f#.6,32e6,32d#6,32e6,8c#6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Good Bad Ugly");
                then:
                  - rtttl.play: "GoodBad:d=4,o=5,b=56:32p,32a#,32d#6,32a#,32d#6,8a#.,16f#.,16g#.,d#,32a#,32d#6,32a#,32d#6,8a#.,16f#.,16g#.,c#6,32a#,32d#6,32a#,32d#6,8a#.,16f#.,32f.,32d#.,c#,32a#,32d#6,32a#,32d#6,8a#.,16g#.,d#"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Top Gun");
                then:
                  - rtttl.play: "TopGun:d=4,o=4,b=31:32p,16c#,16g#,16g#,32f#,32f,32f#,32f,16d#,16d#,32c#,32d#,16f,32d#,32f,16f#,32f,32c#,16f,d#,16c#,16g#,16g#,32f#,32f,32f#,32f,16d#,16d#,32c#,32d#,16f,32d#,32f,16f#,32f,32c#,g#"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "A-Team");
                then:
                  - rtttl.play: "A-Team:d=8,o=5,b=125:4d#6,a#,2d#6,16p,g#,4a#,4d#.,p,16g,16a#,d#6,a#,f6,2d#6,16p,c#.6,16c6,16a#,g#.,2a#"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "The Flinstones");
                then:
                  - rtttl.play: "Flinstones:d=4,o=5,b=40:32p,16f6,16a#,16a#6,32g6,16f6,16a#.,16f6,32d#6,32d6,32d6,32d#6,32f6,16a#,16c6,d6,16f6,16a#.,16a#6,32g6,16f6,16a#.,32f6,32f6,32d#6,32d6,32d6,32d#6,32f6,16a#,16c6,a#,16a6,16d.6,16a#6,32a6,32a6,32g6,32f#6,32a6,8g6,16g6,16c.6,32a6,32a6,32g6,32g6,32f6,32e6,32g6,8f6,16f6,16a#.,16a#6,32g6,16f6,16a#.,16f6,32d#6,32d6,32d6,32d#6,32f6,16a#,16c.6,32d6,32d#6,32f6,16a#,16c.6,32d6,32d#6,32f6,16a#6,16c7,8a#.6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Jeopardy");
                then:
                  - rtttl.play: "Jeopardy:d=4,o=6,b=125:c,f,c,f5,c,f,2c,c,f,c,f,a.,8g,8f,8e,8d,8c#,c,f,c,f5,c,f,2c,f.,8d,c,a#5,a5,g5,f5,p,d#,g#,d#,g#5,d#,g#,2d#,d#,g#,d#,g#,c.7,8a#,8g#,8g,8f,8e,d#,g#,d#,g#5,d#,g#,2d#,g#.,8f,d#,c#,c,p,a#5,p,g#.5,d#,g#"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Inspector Gadget");
                then:
                  - rtttl.play: "Gadget:d=16,o=5,b=50:32d#,32f,32f#,32g#,a#,f#,a,f,g#,f#,32d#,32f,32f#,32g#,a#,d#6,4d6,32d#,32f,32f#,32g#,a#,f#,a,f,g#,f#,8d#"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "The Smurfs");
                then:
                  - rtttl.play: "Smurfs:d=32,o=5,b=200:4c#6,16p,4f#6,p,16c#6,p,8d#6,p,8b,p,4g#,16p,4c#6,p,16a#,p,8f#,p,8a#,p,4g#,4p,g#,p,a#,p,b,p,c6,p,4c#6,16p,4f#6,p,16c#6,p,8d#6,p,8b,p,4g#,16p,4c#6,p,16a#,p,8b,p,8f,p,4f#"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Mahna Mahna");
                then:
                  - rtttl.play: "MahnaMahna:d=16,o=6,b=125:c#,c.,b5,8a#.5,8f.,4g#,a#,g.,4d#,8p,c#,c.,b5,8a#.5,8f.,g#.,8a#.,4g,8p,c#,c.,b5,8a#.5,8f.,4g#,f,g.,8d#.,f,g.,8d#.,f,8g,8d#.,f,8g,d#,8c,a#5,8d#.,8d#.,4d#,8d#."
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Leisure Suit");
                then:
                  - rtttl.play: "LeisureSuit:d=16,o=6,b=56:f.5,f#.5,g.5,g#5,32a#5,f5,g#.5,a#.5,32f5,g#5,32a#5,g#5,8c#.,a#5,32c#,a5,a#.5,c#.,32a5,a#5,32c#,d#,8e,c#.,f.,f.,f.,f.,f,32e,d#,8d,a#.5,e,32f,e,32f,c#,d#.,c#"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "SMBdeath");
                then:
                  - rtttl.play: "smbdeath:d=4,o=5,b=90:32c6,32c6,32c6,8p,16b,16f6,16p,16f6,16f.6,16e.6,16d6,16c6,16p,16e,16p,16c"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Monty Python");
                then:
                  - rtttl.play: "Monty P:d=4,o=5,b=200:f6,8e6,d6,8c#6,c6,8b,a#,8a,8g,8a,8a#,a,8g,2c6,8p,8c6,8a,8p,8a,8a,8g#,8a,8f6,8p,8c6,8c6,8p,8a,8a#,8p,8a#,8a#,8p,8c6,2d6,8p,8a#,8g,8p,8g,8g,8f#,8g,8e6,8p,8d6,8d6,8p,8a#,8a,8p,8a,8a,8p,8a#,2c6,8p,8c6"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Yaketysax");
                then:
                  - rtttl.play: "Yaketysax:d=4,o=5,b=125:8d.,16e,8g,8g,16e,16d,16a4,16b4,16d,16b4,8e,16d,16b4,16a4,16b4,8a4,16a4,16a#4,16b4,16d,16e,16d,g,p,16d,16e,16d,8g,8g,16e,16d,16a4,16b4,16d,16b4,8e,16d,16b4,16a4,16b4,8d,16d,16d,16f#,16a,8f,d,p,16d,16e,16d,8g,16g,16g,8g,16g,16g,8g,8g,16e,8e.,8c,8c,8c,8c,16e,16g,16a,16g,16a#,8g,16a,16b,16a#,16b,16a,16b,8d6,16a,16b,16d6,8b,8g,8d,16e6,16b,16b,16d,8a,8g,g;"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "YMCA");
                then:
                  - rtttl.play: "YMCA:d=4,o=5,b=160:8c#6,8a#,2p,8a#,8g#,8f#,8g#,8a#,c#6,8a#,c#6,8d#6,8a#,2p,8a#,8g#,8f#,8g#,8a#,c#6,8a#,c#6,8d#6,8b,2p,8b,8a#,8g#,8a#,8b,d#6,8f#6,d#6,f.6,d#.6,c#.6,b.,a#,g#"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Barbie Girl");
                then:
                  - rtttl.play: "BarbieGirl:d=4,o=5,b=125:8g#,8e,8g#,8c#6,a,p,8f#,8d#,8f#,8b,g#,8f#,8e,p,8e,8c#,f#,c#,p,8f#,8e,g#,f#"
            - if:
                condition: 
                    - lambda: return (id(select_song).state == "Take On Me");
                then:
                  - rtttl.play: "TakeOnMe:d=4,o=4,b=160:8f#5,8f#5,8f#5,8d5,8p,8b,8p,8e5,8p,8e5,8p,8e5,8g#5,8g#5,8a5,8b5,8a5,8a5,8a5,8e5,8p,8d5,8p,8f#5,8p,8f#5,8p,8f#5,8e5,8e5,8f#5,8e5,8f#5,8f#5,8f#5,8d5,8p,8b,8p,8e5,8p,8e5,8p,8e5,8g#5,8g#5,8a5,8b5,8a5,8a5,8a5,8e5,8p,8d5,8p,8f#5,8p,8f#5,8p,8f#5,8e5,8e5"
